// source: proto/bank_statement_match.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var proto_base_data_type_pb = require('../proto/base_data_type_pb.js');
goog.object.extend(proto, proto_base_data_type_pb);
var proto_business_pb = require('../proto/business_pb.js');
goog.object.extend(proto, proto_business_pb);
var proto_core_functionality_pb = require('../proto/core_functionality_pb.js');
goog.object.extend(proto, proto_core_functionality_pb);
goog.exportSymbol('proto.bank_statement_match.BusinessPartner', null, global);
goog.exportSymbol('proto.bank_statement_match.Currency', null, global);
goog.exportSymbol('proto.bank_statement_match.ImportedBankMovement', null, global);
goog.exportSymbol('proto.bank_statement_match.ListImportedBankMovementsRequest', null, global);
goog.exportSymbol('proto.bank_statement_match.ListImportedBankMovementsResponse', null, global);
goog.exportSymbol('proto.bank_statement_match.ListMatchingMovementsRequest', null, global);
goog.exportSymbol('proto.bank_statement_match.ListMatchingMovementsResponse', null, global);
goog.exportSymbol('proto.bank_statement_match.ListPaymentsRequest', null, global);
goog.exportSymbol('proto.bank_statement_match.ListPaymentsResponse', null, global);
goog.exportSymbol('proto.bank_statement_match.MatchMode', null, global);
goog.exportSymbol('proto.bank_statement_match.MatchingMovement', null, global);
goog.exportSymbol('proto.bank_statement_match.Payment', null, global);
goog.exportSymbol('proto.bank_statement_match.ProcessMovementsRequest', null, global);
goog.exportSymbol('proto.bank_statement_match.ProcessMovementsResponse', null, global);
goog.exportSymbol('proto.bank_statement_match.TenderType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.BusinessPartner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.BusinessPartner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.BusinessPartner.displayName = 'proto.bank_statement_match.BusinessPartner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.Currency.displayName = 'proto.bank_statement_match.Currency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.TenderType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.TenderType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.TenderType.displayName = 'proto.bank_statement_match.TenderType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ListImportedBankMovementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.ListImportedBankMovementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ListImportedBankMovementsRequest.displayName = 'proto.bank_statement_match.ListImportedBankMovementsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ImportedBankMovement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.ImportedBankMovement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ImportedBankMovement.displayName = 'proto.bank_statement_match.ImportedBankMovement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ListImportedBankMovementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bank_statement_match.ListImportedBankMovementsResponse.repeatedFields_, null);
};
goog.inherits(proto.bank_statement_match.ListImportedBankMovementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ListImportedBankMovementsResponse.displayName = 'proto.bank_statement_match.ListImportedBankMovementsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ListPaymentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.ListPaymentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ListPaymentsRequest.displayName = 'proto.bank_statement_match.ListPaymentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.Payment.displayName = 'proto.bank_statement_match.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ListPaymentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bank_statement_match.ListPaymentsResponse.repeatedFields_, null);
};
goog.inherits(proto.bank_statement_match.ListPaymentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ListPaymentsResponse.displayName = 'proto.bank_statement_match.ListPaymentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ListMatchingMovementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.ListMatchingMovementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ListMatchingMovementsRequest.displayName = 'proto.bank_statement_match.ListMatchingMovementsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.MatchingMovement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.MatchingMovement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.MatchingMovement.displayName = 'proto.bank_statement_match.MatchingMovement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ListMatchingMovementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bank_statement_match.ListMatchingMovementsResponse.repeatedFields_, null);
};
goog.inherits(proto.bank_statement_match.ListMatchingMovementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ListMatchingMovementsResponse.displayName = 'proto.bank_statement_match.ListMatchingMovementsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ProcessMovementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.ProcessMovementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ProcessMovementsRequest.displayName = 'proto.bank_statement_match.ProcessMovementsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bank_statement_match.ProcessMovementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bank_statement_match.ProcessMovementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bank_statement_match.ProcessMovementsResponse.displayName = 'proto.bank_statement_match.ProcessMovementsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.BusinessPartner.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.BusinessPartner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.BusinessPartner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.BusinessPartner.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.BusinessPartner}
 */
proto.bank_statement_match.BusinessPartner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.BusinessPartner;
  return proto.bank_statement_match.BusinessPartner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.BusinessPartner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.BusinessPartner}
 */
proto.bank_statement_match.BusinessPartner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.BusinessPartner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.BusinessPartner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.BusinessPartner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.BusinessPartner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.bank_statement_match.BusinessPartner.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.BusinessPartner} returns this
 */
proto.bank_statement_match.BusinessPartner.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.bank_statement_match.BusinessPartner.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.BusinessPartner} returns this
 */
proto.bank_statement_match.BusinessPartner.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.bank_statement_match.BusinessPartner.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.BusinessPartner} returns this
 */
proto.bank_statement_match.BusinessPartner.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.bank_statement_match.BusinessPartner.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.BusinessPartner} returns this
 */
proto.bank_statement_match.BusinessPartner.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.Currency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isoCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.Currency}
 */
proto.bank_statement_match.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.Currency;
  return proto.bank_statement_match.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.Currency}
 */
proto.bank_statement_match.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsoCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.Currency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.Currency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.Currency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsoCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.bank_statement_match.Currency.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.Currency} returns this
 */
proto.bank_statement_match.Currency.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.bank_statement_match.Currency.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.Currency} returns this
 */
proto.bank_statement_match.Currency.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string iso_code = 3;
 * @return {string}
 */
proto.bank_statement_match.Currency.prototype.getIsoCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.Currency} returns this
 */
proto.bank_statement_match.Currency.prototype.setIsoCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.bank_statement_match.Currency.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.Currency} returns this
 */
proto.bank_statement_match.Currency.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.TenderType.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.TenderType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.TenderType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.TenderType.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.TenderType}
 */
proto.bank_statement_match.TenderType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.TenderType;
  return proto.bank_statement_match.TenderType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.TenderType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.TenderType}
 */
proto.bank_statement_match.TenderType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.TenderType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.TenderType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.TenderType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.TenderType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.bank_statement_match.TenderType.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.TenderType} returns this
 */
proto.bank_statement_match.TenderType.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.bank_statement_match.TenderType.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.TenderType} returns this
 */
proto.bank_statement_match.TenderType.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.bank_statement_match.TenderType.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.TenderType} returns this
 */
proto.bank_statement_match.TenderType.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.bank_statement_match.TenderType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.TenderType} returns this
 */
proto.bank_statement_match.TenderType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.bank_statement_match.TenderType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.TenderType} returns this
 */
proto.bank_statement_match.TenderType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ListImportedBankMovementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ListImportedBankMovementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bankAccountUuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    businessPartnerId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    businessPartnerUuid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentAmountFrom: (f = msg.getPaymentAmountFrom()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    paymentAmountTo: (f = msg.getPaymentAmountTo()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    transactionDateFrom: jspb.Message.getFieldWithDefault(msg, 10, 0),
    transactionDateTo: jspb.Message.getFieldWithDefault(msg, 11, 0),
    matchMode: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ListImportedBankMovementsRequest;
  return proto.bank_statement_match.ListImportedBankMovementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ListImportedBankMovementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountUuid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBusinessPartnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessPartnerUuid(value);
      break;
    case 8:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountFrom(value);
      break;
    case 9:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountTo(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateFrom(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateTo(value);
      break;
    case 12:
      var value = /** @type {!proto.bank_statement_match.MatchMode} */ (reader.readEnum());
      msg.setMatchMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ListImportedBankMovementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ListImportedBankMovementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBankAccountUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBusinessPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBusinessPartnerUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentAmountFrom();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAmountTo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getTransactionDateFrom();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTransactionDateTo();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getMatchMode();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string search_value = 3;
 * @return {string}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 bank_account_id = 4;
 * @return {number}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string bank_account_uuid = 5;
 * @return {string}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getBankAccountUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setBankAccountUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 business_partner_id = 6;
 * @return {number}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getBusinessPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setBusinessPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string business_partner_uuid = 7;
 * @return {string}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getBusinessPartnerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setBusinessPartnerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional data.Decimal payment_amount_from = 8;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getPaymentAmountFrom = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 8));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
*/
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setPaymentAmountFrom = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.clearPaymentAmountFrom = function() {
  return this.setPaymentAmountFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.hasPaymentAmountFrom = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional data.Decimal payment_amount_to = 9;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getPaymentAmountTo = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 9));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
*/
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setPaymentAmountTo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.clearPaymentAmountTo = function() {
  return this.setPaymentAmountTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.hasPaymentAmountTo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 transaction_date_from = 10;
 * @return {number}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getTransactionDateFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setTransactionDateFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 transaction_date_to = 11;
 * @return {number}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getTransactionDateTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setTransactionDateTo = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional MatchMode match_mode = 12;
 * @return {!proto.bank_statement_match.MatchMode}
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.getMatchMode = function() {
  return /** @type {!proto.bank_statement_match.MatchMode} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.bank_statement_match.MatchMode} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsRequest} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsRequest.prototype.setMatchMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ImportedBankMovement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ImportedBankMovement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ImportedBankMovement.toObject = function(includeInstance, msg) {
  var f, obj = {
    dateTrx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isReceipt: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    referenceNo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessPartner: (f = msg.getBusinessPartner()) && proto.bank_statement_match.BusinessPartner.toObject(includeInstance, f),
    currency: (f = msg.getCurrency()) && proto.bank_statement_match.Currency.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    memo: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ImportedBankMovement}
 */
proto.bank_statement_match.ImportedBankMovement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ImportedBankMovement;
  return proto.bank_statement_match.ImportedBankMovement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ImportedBankMovement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ImportedBankMovement}
 */
proto.bank_statement_match.ImportedBankMovement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateTrx(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReceipt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceNo(value);
      break;
    case 4:
      var value = new proto.bank_statement_match.BusinessPartner;
      reader.readMessage(value,proto.bank_statement_match.BusinessPartner.deserializeBinaryFromReader);
      msg.setBusinessPartner(value);
      break;
    case 5:
      var value = new proto.bank_statement_match.Currency;
      reader.readMessage(value,proto.bank_statement_match.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 6:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ImportedBankMovement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ImportedBankMovement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ImportedBankMovement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDateTrx();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIsReceipt();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReferenceNo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessPartner();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bank_statement_match.BusinessPartner.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bank_statement_match.Currency.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 date_trx = 1;
 * @return {number}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getDateTrx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.setDateTrx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_receipt = 2;
 * @return {boolean}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getIsReceipt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.setIsReceipt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string reference_no = 3;
 * @return {string}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getReferenceNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.setReferenceNo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional BusinessPartner business_partner = 4;
 * @return {?proto.bank_statement_match.BusinessPartner}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getBusinessPartner = function() {
  return /** @type{?proto.bank_statement_match.BusinessPartner} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.BusinessPartner, 4));
};


/**
 * @param {?proto.bank_statement_match.BusinessPartner|undefined} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
*/
proto.bank_statement_match.ImportedBankMovement.prototype.setBusinessPartner = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.clearBusinessPartner = function() {
  return this.setBusinessPartner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.hasBusinessPartner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Currency currency = 5;
 * @return {?proto.bank_statement_match.Currency}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getCurrency = function() {
  return /** @type{?proto.bank_statement_match.Currency} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.Currency, 5));
};


/**
 * @param {?proto.bank_statement_match.Currency|undefined} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
*/
proto.bank_statement_match.ImportedBankMovement.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional data.Decimal amount = 6;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 6));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
*/
proto.bank_statement_match.ImportedBankMovement.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string memo = 7;
 * @return {string}
 */
proto.bank_statement_match.ImportedBankMovement.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ImportedBankMovement} returns this
 */
proto.bank_statement_match.ImportedBankMovement.prototype.setMemo = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ListImportedBankMovementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ListImportedBankMovementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.bank_statement_match.ImportedBankMovement.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsResponse}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ListImportedBankMovementsResponse;
  return proto.bank_statement_match.ListImportedBankMovementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ListImportedBankMovementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsResponse}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.bank_statement_match.ImportedBankMovement;
      reader.readMessage(value,proto.bank_statement_match.ImportedBankMovement.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ListImportedBankMovementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ListImportedBankMovementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bank_statement_match.ImportedBankMovement.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsResponse} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ImportedBankMovement records = 2;
 * @return {!Array<!proto.bank_statement_match.ImportedBankMovement>}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.bank_statement_match.ImportedBankMovement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bank_statement_match.ImportedBankMovement, 2));
};


/**
 * @param {!Array<!proto.bank_statement_match.ImportedBankMovement>} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsResponse} returns this
*/
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bank_statement_match.ImportedBankMovement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bank_statement_match.ImportedBankMovement}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bank_statement_match.ImportedBankMovement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bank_statement_match.ListImportedBankMovementsResponse} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListImportedBankMovementsResponse} returns this
 */
proto.bank_statement_match.ListImportedBankMovementsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ListPaymentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ListPaymentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListPaymentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bankAccountUuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    businessPartnerId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    businessPartnerUuid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentAmountFrom: (f = msg.getPaymentAmountFrom()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    paymentAmountTo: (f = msg.getPaymentAmountTo()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    transactionDateFrom: jspb.Message.getFieldWithDefault(msg, 10, 0),
    transactionDateTo: jspb.Message.getFieldWithDefault(msg, 11, 0),
    matchMode: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ListPaymentsRequest}
 */
proto.bank_statement_match.ListPaymentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ListPaymentsRequest;
  return proto.bank_statement_match.ListPaymentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ListPaymentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ListPaymentsRequest}
 */
proto.bank_statement_match.ListPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountUuid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBusinessPartnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessPartnerUuid(value);
      break;
    case 8:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountFrom(value);
      break;
    case 9:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountTo(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateFrom(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateTo(value);
      break;
    case 12:
      var value = /** @type {!proto.bank_statement_match.MatchMode} */ (reader.readEnum());
      msg.setMatchMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ListPaymentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ListPaymentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListPaymentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBankAccountUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBusinessPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBusinessPartnerUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentAmountFrom();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAmountTo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getTransactionDateFrom();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTransactionDateTo();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getMatchMode();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string search_value = 3;
 * @return {string}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 bank_account_id = 4;
 * @return {number}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string bank_account_uuid = 5;
 * @return {string}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getBankAccountUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setBankAccountUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 business_partner_id = 6;
 * @return {number}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getBusinessPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setBusinessPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string business_partner_uuid = 7;
 * @return {string}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getBusinessPartnerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setBusinessPartnerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional data.Decimal payment_amount_from = 8;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getPaymentAmountFrom = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 8));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
*/
proto.bank_statement_match.ListPaymentsRequest.prototype.setPaymentAmountFrom = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.clearPaymentAmountFrom = function() {
  return this.setPaymentAmountFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.hasPaymentAmountFrom = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional data.Decimal payment_amount_to = 9;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getPaymentAmountTo = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 9));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
*/
proto.bank_statement_match.ListPaymentsRequest.prototype.setPaymentAmountTo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.clearPaymentAmountTo = function() {
  return this.setPaymentAmountTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.hasPaymentAmountTo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 transaction_date_from = 10;
 * @return {number}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getTransactionDateFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setTransactionDateFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 transaction_date_to = 11;
 * @return {number}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getTransactionDateTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setTransactionDateTo = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional MatchMode match_mode = 12;
 * @return {!proto.bank_statement_match.MatchMode}
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.getMatchMode = function() {
  return /** @type {!proto.bank_statement_match.MatchMode} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.bank_statement_match.MatchMode} value
 * @return {!proto.bank_statement_match.ListPaymentsRequest} returns this
 */
proto.bank_statement_match.ListPaymentsRequest.prototype.setMatchMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    dateTrx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isReceipt: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    referenceNo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessPartner: (f = msg.getBusinessPartner()) && proto.bank_statement_match.BusinessPartner.toObject(includeInstance, f),
    tenderType: (f = msg.getTenderType()) && proto.bank_statement_match.TenderType.toObject(includeInstance, f),
    currency: (f = msg.getCurrency()) && proto.bank_statement_match.Currency.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.Payment}
 */
proto.bank_statement_match.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.Payment;
  return proto.bank_statement_match.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.Payment}
 */
proto.bank_statement_match.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateTrx(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReceipt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceNo(value);
      break;
    case 4:
      var value = new proto.bank_statement_match.BusinessPartner;
      reader.readMessage(value,proto.bank_statement_match.BusinessPartner.deserializeBinaryFromReader);
      msg.setBusinessPartner(value);
      break;
    case 5:
      var value = new proto.bank_statement_match.TenderType;
      reader.readMessage(value,proto.bank_statement_match.TenderType.deserializeBinaryFromReader);
      msg.setTenderType(value);
      break;
    case 6:
      var value = new proto.bank_statement_match.Currency;
      reader.readMessage(value,proto.bank_statement_match.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 7:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDateTrx();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIsReceipt();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReferenceNo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessPartner();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bank_statement_match.BusinessPartner.serializeBinaryToWriter
    );
  }
  f = message.getTenderType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bank_statement_match.TenderType.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bank_statement_match.Currency.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int64 date_trx = 1;
 * @return {number}
 */
proto.bank_statement_match.Payment.prototype.getDateTrx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.setDateTrx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_receipt = 2;
 * @return {boolean}
 */
proto.bank_statement_match.Payment.prototype.getIsReceipt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.setIsReceipt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string reference_no = 3;
 * @return {string}
 */
proto.bank_statement_match.Payment.prototype.getReferenceNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.setReferenceNo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional BusinessPartner business_partner = 4;
 * @return {?proto.bank_statement_match.BusinessPartner}
 */
proto.bank_statement_match.Payment.prototype.getBusinessPartner = function() {
  return /** @type{?proto.bank_statement_match.BusinessPartner} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.BusinessPartner, 4));
};


/**
 * @param {?proto.bank_statement_match.BusinessPartner|undefined} value
 * @return {!proto.bank_statement_match.Payment} returns this
*/
proto.bank_statement_match.Payment.prototype.setBusinessPartner = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.clearBusinessPartner = function() {
  return this.setBusinessPartner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.Payment.prototype.hasBusinessPartner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TenderType tender_type = 5;
 * @return {?proto.bank_statement_match.TenderType}
 */
proto.bank_statement_match.Payment.prototype.getTenderType = function() {
  return /** @type{?proto.bank_statement_match.TenderType} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.TenderType, 5));
};


/**
 * @param {?proto.bank_statement_match.TenderType|undefined} value
 * @return {!proto.bank_statement_match.Payment} returns this
*/
proto.bank_statement_match.Payment.prototype.setTenderType = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.clearTenderType = function() {
  return this.setTenderType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.Payment.prototype.hasTenderType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Currency currency = 6;
 * @return {?proto.bank_statement_match.Currency}
 */
proto.bank_statement_match.Payment.prototype.getCurrency = function() {
  return /** @type{?proto.bank_statement_match.Currency} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.Currency, 6));
};


/**
 * @param {?proto.bank_statement_match.Currency|undefined} value
 * @return {!proto.bank_statement_match.Payment} returns this
*/
proto.bank_statement_match.Payment.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.Payment.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional data.Decimal amount = 7;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.Payment.prototype.getAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 7));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.Payment} returns this
*/
proto.bank_statement_match.Payment.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.Payment.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.bank_statement_match.Payment.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.Payment} returns this
 */
proto.bank_statement_match.Payment.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bank_statement_match.ListPaymentsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ListPaymentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ListPaymentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListPaymentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.bank_statement_match.Payment.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ListPaymentsResponse}
 */
proto.bank_statement_match.ListPaymentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ListPaymentsResponse;
  return proto.bank_statement_match.ListPaymentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ListPaymentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ListPaymentsResponse}
 */
proto.bank_statement_match.ListPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.bank_statement_match.Payment;
      reader.readMessage(value,proto.bank_statement_match.Payment.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ListPaymentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ListPaymentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListPaymentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bank_statement_match.Payment.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListPaymentsResponse} returns this
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Payment records = 2;
 * @return {!Array<!proto.bank_statement_match.Payment>}
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.bank_statement_match.Payment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bank_statement_match.Payment, 2));
};


/**
 * @param {!Array<!proto.bank_statement_match.Payment>} value
 * @return {!proto.bank_statement_match.ListPaymentsResponse} returns this
*/
proto.bank_statement_match.ListPaymentsResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bank_statement_match.Payment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bank_statement_match.Payment}
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bank_statement_match.Payment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bank_statement_match.ListPaymentsResponse} returns this
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListPaymentsResponse} returns this
 */
proto.bank_statement_match.ListPaymentsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ListMatchingMovementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ListMatchingMovementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListMatchingMovementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bankAccountUuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    businessPartnerId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    businessPartnerUuid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentAmountFrom: (f = msg.getPaymentAmountFrom()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    paymentAmountTo: (f = msg.getPaymentAmountTo()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    transactionDateFrom: jspb.Message.getFieldWithDefault(msg, 10, 0),
    transactionDateTo: jspb.Message.getFieldWithDefault(msg, 11, 0),
    matchMode: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ListMatchingMovementsRequest;
  return proto.bank_statement_match.ListMatchingMovementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ListMatchingMovementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountUuid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBusinessPartnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessPartnerUuid(value);
      break;
    case 8:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountFrom(value);
      break;
    case 9:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountTo(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateFrom(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateTo(value);
      break;
    case 12:
      var value = /** @type {!proto.bank_statement_match.MatchMode} */ (reader.readEnum());
      msg.setMatchMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ListMatchingMovementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ListMatchingMovementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListMatchingMovementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBankAccountUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBusinessPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBusinessPartnerUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentAmountFrom();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAmountTo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getTransactionDateFrom();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTransactionDateTo();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getMatchMode();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string search_value = 3;
 * @return {string}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 bank_account_id = 4;
 * @return {number}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string bank_account_uuid = 5;
 * @return {string}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getBankAccountUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setBankAccountUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 business_partner_id = 6;
 * @return {number}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getBusinessPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setBusinessPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string business_partner_uuid = 7;
 * @return {string}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getBusinessPartnerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setBusinessPartnerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional data.Decimal payment_amount_from = 8;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getPaymentAmountFrom = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 8));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
*/
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setPaymentAmountFrom = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.clearPaymentAmountFrom = function() {
  return this.setPaymentAmountFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.hasPaymentAmountFrom = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional data.Decimal payment_amount_to = 9;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getPaymentAmountTo = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 9));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
*/
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setPaymentAmountTo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.clearPaymentAmountTo = function() {
  return this.setPaymentAmountTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.hasPaymentAmountTo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 transaction_date_from = 10;
 * @return {number}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getTransactionDateFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setTransactionDateFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 transaction_date_to = 11;
 * @return {number}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getTransactionDateTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setTransactionDateTo = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional MatchMode match_mode = 12;
 * @return {!proto.bank_statement_match.MatchMode}
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.getMatchMode = function() {
  return /** @type {!proto.bank_statement_match.MatchMode} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.bank_statement_match.MatchMode} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsRequest} returns this
 */
proto.bank_statement_match.ListMatchingMovementsRequest.prototype.setMatchMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.MatchingMovement.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.MatchingMovement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.MatchingMovement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.MatchingMovement.toObject = function(includeInstance, msg) {
  var f, obj = {
    dateTrx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isReceipt: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    documentNo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessPartner: (f = msg.getBusinessPartner()) && proto.bank_statement_match.BusinessPartner.toObject(includeInstance, f),
    tenderType: (f = msg.getTenderType()) && proto.bank_statement_match.TenderType.toObject(includeInstance, f),
    currency: (f = msg.getCurrency()) && proto.bank_statement_match.Currency.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    referenceNo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    memo: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.MatchingMovement}
 */
proto.bank_statement_match.MatchingMovement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.MatchingMovement;
  return proto.bank_statement_match.MatchingMovement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.MatchingMovement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.MatchingMovement}
 */
proto.bank_statement_match.MatchingMovement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateTrx(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReceipt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentNo(value);
      break;
    case 4:
      var value = new proto.bank_statement_match.BusinessPartner;
      reader.readMessage(value,proto.bank_statement_match.BusinessPartner.deserializeBinaryFromReader);
      msg.setBusinessPartner(value);
      break;
    case 5:
      var value = new proto.bank_statement_match.TenderType;
      reader.readMessage(value,proto.bank_statement_match.TenderType.deserializeBinaryFromReader);
      msg.setTenderType(value);
      break;
    case 6:
      var value = new proto.bank_statement_match.Currency;
      reader.readMessage(value,proto.bank_statement_match.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 7:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceNo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.MatchingMovement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.MatchingMovement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.MatchingMovement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.MatchingMovement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDateTrx();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIsReceipt();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDocumentNo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessPartner();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bank_statement_match.BusinessPartner.serializeBinaryToWriter
    );
  }
  f = message.getTenderType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bank_statement_match.TenderType.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.bank_statement_match.Currency.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getReferenceNo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int64 date_trx = 1;
 * @return {number}
 */
proto.bank_statement_match.MatchingMovement.prototype.getDateTrx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.setDateTrx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_receipt = 2;
 * @return {boolean}
 */
proto.bank_statement_match.MatchingMovement.prototype.getIsReceipt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.setIsReceipt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string document_no = 3;
 * @return {string}
 */
proto.bank_statement_match.MatchingMovement.prototype.getDocumentNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional BusinessPartner business_partner = 4;
 * @return {?proto.bank_statement_match.BusinessPartner}
 */
proto.bank_statement_match.MatchingMovement.prototype.getBusinessPartner = function() {
  return /** @type{?proto.bank_statement_match.BusinessPartner} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.BusinessPartner, 4));
};


/**
 * @param {?proto.bank_statement_match.BusinessPartner|undefined} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
*/
proto.bank_statement_match.MatchingMovement.prototype.setBusinessPartner = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.clearBusinessPartner = function() {
  return this.setBusinessPartner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.MatchingMovement.prototype.hasBusinessPartner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TenderType tender_type = 5;
 * @return {?proto.bank_statement_match.TenderType}
 */
proto.bank_statement_match.MatchingMovement.prototype.getTenderType = function() {
  return /** @type{?proto.bank_statement_match.TenderType} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.TenderType, 5));
};


/**
 * @param {?proto.bank_statement_match.TenderType|undefined} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
*/
proto.bank_statement_match.MatchingMovement.prototype.setTenderType = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.clearTenderType = function() {
  return this.setTenderType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.MatchingMovement.prototype.hasTenderType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Currency currency = 6;
 * @return {?proto.bank_statement_match.Currency}
 */
proto.bank_statement_match.MatchingMovement.prototype.getCurrency = function() {
  return /** @type{?proto.bank_statement_match.Currency} */ (
    jspb.Message.getWrapperField(this, proto.bank_statement_match.Currency, 6));
};


/**
 * @param {?proto.bank_statement_match.Currency|undefined} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
*/
proto.bank_statement_match.MatchingMovement.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.MatchingMovement.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional data.Decimal amount = 7;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.MatchingMovement.prototype.getAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 7));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
*/
proto.bank_statement_match.MatchingMovement.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.MatchingMovement.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.bank_statement_match.MatchingMovement.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string reference_no = 9;
 * @return {string}
 */
proto.bank_statement_match.MatchingMovement.prototype.getReferenceNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.setReferenceNo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string memo = 10;
 * @return {string}
 */
proto.bank_statement_match.MatchingMovement.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.MatchingMovement} returns this
 */
proto.bank_statement_match.MatchingMovement.prototype.setMemo = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bank_statement_match.ListMatchingMovementsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ListMatchingMovementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ListMatchingMovementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListMatchingMovementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.bank_statement_match.MatchingMovement.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ListMatchingMovementsResponse}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ListMatchingMovementsResponse;
  return proto.bank_statement_match.ListMatchingMovementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ListMatchingMovementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ListMatchingMovementsResponse}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.bank_statement_match.MatchingMovement;
      reader.readMessage(value,proto.bank_statement_match.MatchingMovement.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ListMatchingMovementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ListMatchingMovementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ListMatchingMovementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bank_statement_match.MatchingMovement.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsResponse} returns this
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated MatchingMovement records = 2;
 * @return {!Array<!proto.bank_statement_match.MatchingMovement>}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.bank_statement_match.MatchingMovement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bank_statement_match.MatchingMovement, 2));
};


/**
 * @param {!Array<!proto.bank_statement_match.MatchingMovement>} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsResponse} returns this
*/
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bank_statement_match.MatchingMovement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bank_statement_match.MatchingMovement}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bank_statement_match.MatchingMovement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bank_statement_match.ListMatchingMovementsResponse} returns this
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ListMatchingMovementsResponse} returns this
 */
proto.bank_statement_match.ListMatchingMovementsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ProcessMovementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ProcessMovementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ProcessMovementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bankAccountUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    businessPartnerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    businessPartnerUuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paymentAmountFrom: (f = msg.getPaymentAmountFrom()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    paymentAmountTo: (f = msg.getPaymentAmountTo()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    transactionDateFrom: jspb.Message.getFieldWithDefault(msg, 7, 0),
    transactionDateTo: jspb.Message.getFieldWithDefault(msg, 8, 0),
    matchMode: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ProcessMovementsRequest}
 */
proto.bank_statement_match.ProcessMovementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ProcessMovementsRequest;
  return proto.bank_statement_match.ProcessMovementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ProcessMovementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ProcessMovementsRequest}
 */
proto.bank_statement_match.ProcessMovementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBusinessPartnerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessPartnerUuid(value);
      break;
    case 5:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountFrom(value);
      break;
    case 6:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmountTo(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateFrom(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTransactionDateTo(value);
      break;
    case 9:
      var value = /** @type {!proto.bank_statement_match.MatchMode} */ (reader.readEnum());
      msg.setMatchMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ProcessMovementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ProcessMovementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ProcessMovementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBankAccountUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBusinessPartnerId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBusinessPartnerUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaymentAmountFrom();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAmountTo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getTransactionDateFrom();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTransactionDateTo();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getMatchMode();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional int32 bank_account_id = 1;
 * @return {number}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string bank_account_uuid = 2;
 * @return {string}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getBankAccountUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setBankAccountUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 business_partner_id = 3;
 * @return {number}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getBusinessPartnerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setBusinessPartnerId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string business_partner_uuid = 4;
 * @return {string}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getBusinessPartnerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setBusinessPartnerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional data.Decimal payment_amount_from = 5;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getPaymentAmountFrom = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 5));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
*/
proto.bank_statement_match.ProcessMovementsRequest.prototype.setPaymentAmountFrom = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.clearPaymentAmountFrom = function() {
  return this.setPaymentAmountFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.hasPaymentAmountFrom = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional data.Decimal payment_amount_to = 6;
 * @return {?proto.data.Decimal}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getPaymentAmountTo = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 6));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
*/
proto.bank_statement_match.ProcessMovementsRequest.prototype.setPaymentAmountTo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.clearPaymentAmountTo = function() {
  return this.setPaymentAmountTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.hasPaymentAmountTo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 transaction_date_from = 7;
 * @return {number}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getTransactionDateFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setTransactionDateFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 transaction_date_to = 8;
 * @return {number}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getTransactionDateTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setTransactionDateTo = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional MatchMode match_mode = 9;
 * @return {!proto.bank_statement_match.MatchMode}
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.getMatchMode = function() {
  return /** @type {!proto.bank_statement_match.MatchMode} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.bank_statement_match.MatchMode} value
 * @return {!proto.bank_statement_match.ProcessMovementsRequest} returns this
 */
proto.bank_statement_match.ProcessMovementsRequest.prototype.setMatchMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bank_statement_match.ProcessMovementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bank_statement_match.ProcessMovementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bank_statement_match.ProcessMovementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ProcessMovementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bank_statement_match.ProcessMovementsResponse}
 */
proto.bank_statement_match.ProcessMovementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bank_statement_match.ProcessMovementsResponse;
  return proto.bank_statement_match.ProcessMovementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bank_statement_match.ProcessMovementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bank_statement_match.ProcessMovementsResponse}
 */
proto.bank_statement_match.ProcessMovementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bank_statement_match.ProcessMovementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bank_statement_match.ProcessMovementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bank_statement_match.ProcessMovementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bank_statement_match.ProcessMovementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.bank_statement_match.ProcessMovementsResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bank_statement_match.ProcessMovementsResponse} returns this
 */
proto.bank_statement_match.ProcessMovementsResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.bank_statement_match.MatchMode = {
  MODE_NOT_MATCHED: 0,
  MODE_MATCHED: 1
};

goog.object.extend(exports, proto.bank_statement_match);
