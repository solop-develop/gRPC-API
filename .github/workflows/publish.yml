# This workflow will run tests using node and then publish a package to NPM, Yarn and GitHub Packages
# when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages
# This file was contributed by EdwinBetanc0urt@outlook.com from ERP Consultores y Asociados, C.A

name: gRPC-API Package Publish

on:
  release:
    types:
      - created

jobs:

  build-app:
    name: Generate Stub Files
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'yarn'

      - name: Install node dependencies
        run: yarn ci # if a package.lock exists

      - name: Generate proto stub
        run: yarn stub

      - name: Upload dist app
        uses: actions/upload-artifact@v3
        with:
          name: gRPC-API
          path: ./


  # Check secrets to push image in NPM registry
  check-npm-secrets:
    name: Check if NPM registry information was set on secrets
    needs:
      - build-app
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ secrets.NPM_TOKEN }}" != "" && ]]; \
          then
            echo "Secrets to use a NPM are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a NPM were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  publish-npm:
    name: Publish NPM Registry
    needs:
      - check-npm-secrets
    # Skip step based on secret
    if: needs.check-npm-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
          registry-url: https://registry.npmjs.org/

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Publish NPM Registry
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  # # Check secrets to push image in NPM registry
  # check-yarn-secrets:
  #   name: Check if Yarn registry information was set on secrets
  #   needs:
  #     - build-app
  #   runs-on: ubuntu-latest
  #   outputs:
  #     is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
  #   steps:
  #     - id: check_secret_job
  #       run: |
  #         if [[ "${{ secrets.YARN_TOKEN }}" != "" && ]]; \
  #         then
  #           echo "Secrets to use a NPM are configured in the repo"
  #           echo "is_have_secrets=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "Secrets to use a NPM were not configured in the repo"
  #           echo "is_have_secrets=false" >> $GITHUB_OUTPUT
  #         fi

  # publish-yarn:
  #   name: Publish Yarn Registry
  #   needs:
  #     - check-yarn-secrets
  #   # Skip step based on secret
  #   if: needs.check-yarn-secrets.outputs.is_have_secrets == 'true'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Node configuration
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 14
  #         cache: 'npm'
  #         registry-url: https://registry.npmjs.org/

  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v3

  #     - name: Publish Yarn Registry
  #       run: yarn publish --access=public
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.YARN_TOKEN }}


  publish-gpr:
    name: Publish GitHub Package Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - build-app
    steps:
      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'
          # Defaults to the user or organization that owns the workflow file
          scope: '@adempiere'

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - run: ls

      - name: Publish GitHub Package Registry
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish dist binaries to application
  publish-app-dist:
    name: Upload Binaries ADempiere-Proxy
    needs:
      - build-app
    runs-on: ubuntu-latest
    steps:
      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: gRPC-API

      - run: ls

      - name: Publish application binary in repository
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'gRPC-API.zip'
