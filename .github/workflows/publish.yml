# This workflow will run tests using node and then publish a package to NPM, Yarn and GitHub Packages
# when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages
# This file was contributed by EdwinBetanc0urt@outlook.com from ERP Consultores y Asociados, C.A

name: gRPC-API Package Publish

on:
  release:
    types:
      - created

jobs:

  build-app:
    name: Generate Stub Files
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'yarn'

      - name: Install node dependencies
        run: yarn ci # if a package.lock exists

      - name: Generate proto stub
        run: yarn stub

      - name: Upload dist app
        uses: actions/upload-artifact@v3
        with:
          name: grpc-api
          path: ./


  # Check secrets to push image in NPM registry
  check-npm-secrets:
    name: Check if NPM registry information was set on secrets
    needs:
      - build-app
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ secrets.NPM_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a NPM are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a NPM were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  publish-npm:
    name: Publish NPM Registry
    needs:
      - check-npm-secrets
    # Skip step based on secret
    if: needs.check-npm-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
          registry-url: https://registry.npmjs.org/

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Publish NPM Registry
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  # Check secrets to push image in GitHub Packages registry
  check-ghpr-secrets:
    name: Check if GitHub Packages registry information was set on secrets
    needs:
      - build-app
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ secrets.GITHUB_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a GitHub are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a GitHub were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  publish-ghpr:
    name: Publish GitHub Packages Registry
    needs:
      - check-ghpr-secrets
    # Skip step based on secret
    if: needs.check-ghpr-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - run: ls

      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: grpc-api

      - run: ls

      - name: Set Lower Case to owner and repository
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Echo org
        run: |
          echo {{ env.OWNER_LC }}
          echo $OWNER_LC
      
      - name: Echo repo
        run: |
          echo ${{ github.repository_owner }}
          echo ${{ github.repository_name }}

      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'
          # Defaults to the user or organization that owns the workflow file
          scope: '@${{ github.repository_owner }}'

      - run: ls

      - name: Publish GitHub Package Registry
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Publish dist binaries to application
  publish-app-dist:
    name: Upload Binaries ADempiere-Proxy
    needs:
      - build-app
    runs-on: ubuntu-latest
    steps:
      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: grpc-api

      - run: ls

      - name: Compress files for application dist
        uses: TheDoctor0/zip-release@0.6.2
        with:
          filename: 'gRPC-API.zip'
          path: './'

      - run: ls

      - name: Publish application binary in repository
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'gRPC-API.zip'
